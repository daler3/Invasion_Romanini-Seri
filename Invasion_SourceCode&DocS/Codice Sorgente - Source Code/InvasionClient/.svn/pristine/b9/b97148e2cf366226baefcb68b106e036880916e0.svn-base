package guiClient;

import interfacciaGUI.ControllerAccountStatistiche;
import interfacciaGUI.ControllerLimbo;
import interfacciaGUI.ControllerUtente;

import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.Socket;
import java.rmi.RemoteException;
import java.util.ArrayList;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.JToggleButton;
import javax.swing.SwingConstants;

import comunicazione.Client2Server;
import comunicazione.ClientComunicazione;
import socket.InterpreteClient;
import classiCondivise.BeanTavolo;
import client.Ambasciatore;
import client.GiocatoreTavoli;

public class PanelCambioPassword extends JPanel {
	final JPanel p = this;
	
	//INFO
	ControllerAccountStatistiche controllerAccount;
	
	//La griglia
	private GridBagLayout gridBagLayout;
	private GridBagConstraints gbc_lblTitolo;
	private GridBagConstraints gbc_lblUser;
	private GridBagConstraints gbc_usernameField;
	private GridBagConstraints gbc_lblPassword;
	private GridBagConstraints gbc_passwordField;
	private GridBagConstraints gbc_lblPassword_2;
	private GridBagConstraints gbc_passwordField_2;
	private GridBagConstraints gbc_lblProtocollo;
	private GridBagConstraints gbc_rdbtnSocket;
	private GridBagConstraints gbc_rdbtnRmi;
	private GridBagConstraints gbc_btnEffettuaCambio;
	private GridBagConstraints gbc_btnAnnulla;
	//Componenti
	private JLabel lblTitolo;
	private JLabel lblUser;
	private JLabel lblPassword;
	private JLabel lblPassword2;
	private JPasswordField oldPswField;
	private JPasswordField passwordField;
	private JPasswordField passwordField_2;
	private JButton btnEffettuaCambio;
	private JButton btnAnnulla;
	
	
	
	public PanelCambioPassword(ControllerAccountStatistiche controllerAccount) {
		this.controllerAccount=controllerAccount;
		gridBagLayout = new GridBagLayout();
		//Impostiamo la dimensione delle colonne-righe e il loro ridimensionamento dinamico
		gridBagLayout.columnWidths = new int[]{20, 150, 180, 150, 20};
		gridBagLayout.rowHeights = new int[]{30, 15, 19, 15, 19, 15, 19, 19, 15, 19};
		gridBagLayout.columnWeights = new double[]{0.0, 1.0, 1.0, 1.0, 0.0};
		gridBagLayout.rowWeights = new double[]{1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.3, 1.5, 0.0};
		setLayout(gridBagLayout);
		//Iniziamo ad inserire i componenti
		lblTitolo = new JLabel("Cambia Password");
		lblTitolo.setForeground(Color.RED);
		lblTitolo.setFont(lblTitolo.getFont().deriveFont(lblTitolo.getFont().getStyle() | Font.BOLD, lblTitolo.getFont().getSize() + 4f));
		lblTitolo.setHorizontalAlignment(SwingConstants.CENTER);
		gbc_lblTitolo = new GridBagConstraints();
		gbc_lblTitolo.fill = GridBagConstraints.BOTH;
		gbc_lblTitolo.insets = new Insets(0, 0, 5, 5);
		gbc_lblTitolo.gridwidth = 3;
		gbc_lblTitolo.gridx = 1;
		gbc_lblTitolo.gridy = 0;
		add(lblTitolo, gbc_lblTitolo);
		
		lblUser = new JLabel("Vecchia Password");
		lblUser.setFont(new Font("Dialog", Font.BOLD, 12));
		lblUser.setHorizontalAlignment(SwingConstants.CENTER);
		gbc_lblUser = new GridBagConstraints();
		gbc_lblUser.fill = GridBagConstraints.BOTH;
		gbc_lblUser.insets = new Insets(0, 0, 5, 5);
		gbc_lblUser.gridx = 2;
		gbc_lblUser.gridy = 1;
		add(lblUser, gbc_lblUser);
		
		oldPswField = new JPasswordField();
		oldPswField.setToolTipText("Inserisci la vecchia password");
		oldPswField.setHorizontalAlignment(SwingConstants.CENTER);
		oldPswField.setColumns(10);
		gbc_usernameField = new GridBagConstraints();
		gbc_usernameField.fill = GridBagConstraints.BOTH;
		gbc_usernameField.insets = new Insets(0, 0, 5, 5);
		gbc_usernameField.gridx = 2;
		gbc_usernameField.gridy = 2;
		add(oldPswField, gbc_usernameField);
		oldPswField.setColumns(10);
		
		lblPassword = new JLabel("Nuova password");
		lblPassword.setFont(new Font("Dialog", Font.BOLD, 12));
		lblPassword.setHorizontalAlignment(SwingConstants.CENTER);
		gbc_lblPassword = new GridBagConstraints();
		gbc_lblPassword.fill = GridBagConstraints.BOTH;
		gbc_lblPassword.insets = new Insets(0, 0, 5, 5);
		gbc_lblPassword.gridx = 2;
		gbc_lblPassword.gridy = 3;
		add(lblPassword, gbc_lblPassword);
		
		passwordField = new JPasswordField();
		passwordField.setToolTipText("Inserisci la nuova password");
		passwordField.setHorizontalAlignment(SwingConstants.CENTER);
		gbc_passwordField = new GridBagConstraints();
		gbc_passwordField.fill = GridBagConstraints.BOTH;
		gbc_passwordField.insets = new Insets(0, 0, 5, 5);
		gbc_passwordField.gridx = 2;
		gbc_passwordField.gridy = 4;
		add(passwordField, gbc_passwordField);
		
		lblPassword2 = new JLabel("Ripeti nuova password");
		lblPassword2.setHorizontalAlignment(SwingConstants.CENTER);
		lblPassword2.setFont(new Font("Dialog", Font.BOLD, 12));
		gbc_lblPassword_2 = new GridBagConstraints();
		gbc_lblPassword_2.fill = GridBagConstraints.HORIZONTAL;
		gbc_lblPassword_2.insets = new Insets(0, 0, 5, 5);
		gbc_lblPassword_2.gridx = 2;
		gbc_lblPassword_2.gridy = 5;
		add(lblPassword2, gbc_lblPassword_2);
		
		passwordField_2 = new JPasswordField();
		passwordField_2.setToolTipText("Inserisci ancora la nuova password");
		passwordField_2.setHorizontalAlignment(SwingConstants.CENTER);
		gbc_passwordField_2 = new GridBagConstraints();
		gbc_passwordField_2.insets = new Insets(0, 0, 5, 5);
		gbc_passwordField_2.fill = GridBagConstraints.BOTH;
		gbc_passwordField_2.gridx = 2;
		gbc_passwordField_2.gridy = 6;
		add(passwordField_2, gbc_passwordField_2);

		gbc_lblProtocollo = new GridBagConstraints();
		gbc_lblProtocollo.fill = GridBagConstraints.BOTH;
		gbc_lblProtocollo.insets = new Insets(0, 0, 5, 5);
		gbc_lblProtocollo.gridx = 2;
		gbc_lblProtocollo.gridy = 8;
		
		gbc_rdbtnSocket = new GridBagConstraints();
		gbc_rdbtnSocket.fill = GridBagConstraints.HORIZONTAL;
		gbc_rdbtnSocket.insets = new Insets(0, 0, 5, 5);
		gbc_rdbtnSocket.gridx = 1;
		gbc_rdbtnSocket.gridy = 9;
		
		
		btnEffettuaCambio = new JButton("Annulla");
		btnEffettuaCambio.addActionListener(new AnnullaListener());
		
		
		gbc_rdbtnRmi = new GridBagConstraints();
		gbc_rdbtnRmi.fill = GridBagConstraints.HORIZONTAL;
		gbc_rdbtnRmi.insets = new Insets(0, 0, 5, 5);
		gbc_rdbtnRmi.gridx = 3;
		gbc_rdbtnRmi.gridy = 9;
		
		gbc_btnEffettuaCambio = new GridBagConstraints();
		gbc_btnEffettuaCambio.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnEffettuaCambio.insets = new Insets(0, 0, 5, 5);
		gbc_btnEffettuaCambio.gridx = 1;
		gbc_btnEffettuaCambio.gridy = 8;
		add(btnEffettuaCambio, gbc_btnEffettuaCambio);
		
		btnAnnulla = new JButton("Cambia Password");
		btnAnnulla.addActionListener(new CambioPswListener());
		gbc_btnAnnulla = new GridBagConstraints();
		gbc_btnAnnulla.fill = GridBagConstraints.HORIZONTAL;
		gbc_btnAnnulla.insets = new Insets(0, 0, 5, 5);
		gbc_btnAnnulla.gridx = 3;
		gbc_btnAnnulla.gridy = 8;
		add(btnAnnulla, gbc_btnAnnulla);
	}
	
	public class AnnullaListener implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent arg0) {
			//TODO con il riferimento del frame fare super.dispose();
			
		}
	
	}

	public class CambioPswListener implements ActionListener {
		@Override
		public void actionPerformed(ActionEvent arg0) {
			String oldPsw = new String(oldPswField.getPassword());
			String password1 = new String(passwordField.getPassword());
			String password2 = new String(passwordField_2.getPassword());
			
			if(oldPsw.isEmpty()){
				lblTitolo.setText(lblTitolo.getText()+" - Inserire la vecchia Password");
				return;
			}
			if(password1.isEmpty()){
				lblTitolo.setText("Inserire la nuova Password");
				return;
			}
			if(password2.isEmpty()){
				lblTitolo.setText("Ripeti la nuova Password");
				return;
			}
			if(!passwordCorrispondono(password1, password2)){
				lblTitolo.setText("Password non corrispondenti");
				return;
			}
			
			//Superati i controlli preliminari
			if(controllerAccount.cambiaPassword(oldPsw, password1)){
				new CreaPopup("Password aggiornata!");
				dispose();
			}
			else{
				new CreaPopup("Vecchia password errata");
			}	
		}
		private boolean passwordCorrispondono(String psw1, String psw2){
			return psw1.equals(psw2);
		}
	}
}
