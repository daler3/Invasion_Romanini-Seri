package interfacciaGUI;

import java.util.ArrayList;

import mappa.Mappa;
import mappa.Territorio;
import classiCondivise.BeanGiocatore;
import classiCondivise.Colori;

public interface ViewPartita {
	
	
	public void scegliColore (Integer timer, ArrayList<Colori> coloriDisponibili);
	
	public void riceviOrdinePartita(ArrayList<BeanGiocatore>listaInfoGiocatori, ArrayList<Colori>ordineColori);
	
	//a inizio partita
	public void riceviTerritoriPosizionaArmate(Integer numeroArmateDaPosizionare, Integer tempoPosizionaArmate, Mappa mappaPartita);
	
	public void riceviMappa(Mappa mappa);
	
	public void riceviComunicazioneNuovoTurno(Colori colore, String username);

	public void riceviArmateInizioTurno(Integer numeroArmate, Integer tempo);

	public void comunicazioneInAttesaMossa(Integer tempo);
	
	
//	public void riceviComunicazioneAttacco(Integer tempoDifesa, Territorio territorioAttaccante, Territorio territorioAttaccato,
//			Integer numeroUnitaAttaccanti, Integer numeroUnitaDifesa, Integer[] risultati, 
//			boolean conquistato);
	
	
	//Se ho attaccato io
	public void riceviConfermaMioAttacco(Territorio territorioAttaccante, Territorio territorioAttaccato,
										ArrayList<Integer> risultatoDadiAttacco);
	
	
	//se ho subito l'attacco
	public void riceviAttaccoSubito(Territorio territorioAttaccante, Territorio territorioAttaccato,
									ArrayList<Integer> risultatoDadiAttacco, Integer tempoDifesa);
	
	
	//se sono spettatore dell'attacco
	public void riceviComunicazioneAttacco(Colori coloreAttaccante, Territorio territorioAttaccante, Territorio territorioAttaccato,
											ArrayList<Integer> risultatoDadiAttacco);	
	
	
	
	
	//giocatore perde la partita
	public void riceviComunicazioneSconfitta(String giocatoreSconfitto);
	
	//hai perso, devi tornare nel limbo
	public void riceviComunicazioneSconfitta(ControllerLimbo limboSconfitta);
	
	public void riceviComunicazioneRitirata(String giocatoreRitirato);
	
	
	public void riceviClassificaFinale(ArrayList<String> classificaFinale, Integer punteggioPrimo, Integer punteggioSecondo);
	
	
	
	
//	/**
//	 * Disabilita tutti i pulsanti per la gestione partita in quanto non è più il nostro turno.
//	 */
//	public void disabilitaPulsantiPartita();
//	
//	/**
//	 * Abilita tutti i pulsanti che permettono di posizionare i rinforzi.
//	 * -Pulsanti selezione stati;
//	 * -TextBox numero armate
//	 * -Pulsante posiziona armate
//	 * -Pulsante posizionaRandom
//	 * -Pulsante noRinforzi
//	 */
//	public void abilitaPulsantiRinforzi();
//	
//	/**
//	 * Abilita i pulsanti per effettuare l'attacco:
//	 * -Pulsanti selezione stati
//	 * -Pulsante attacca
//	 * -Pulsante passaTurno
//	 */
//	public void abilitaPulsantiAttacco();
//	
//	/**
//	 * Mostra i pulsanti per la selezione del numero delle armate attaccanti:
//	 * -Label in cui si chiede di scegliere il numero di armate attaccanti
//	 * -Toggle Button, in numero pari a armateMassime
//	 * -Pulsante Annulla
//	 * @param armateMassime	Il massimo numero di armate che possono attaccare
//	 */
//	public void sceltaArmateAttaccenti(Integer armateMassime);
//	
//	/**
//	 * Fa apparire un popup che permette di lanciare i dadi per la difesa
//	 */
//	public void popupDifesa();
//	
//	/**
//	 * Fa apparire un popup con il numero selezionato di dadi che danno il valore selezionato.
//	 * @param numeroDadi	Dadi da far apparire
//	 * @param valoreDadi	Risultato da mostrare
//	 */
//	public void popupDadi(Integer numeroDadi, int[] valoreDadi);
//}
	
}
