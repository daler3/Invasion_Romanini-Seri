package comunicazione;

import interfacceRemote.AcceptInterface;
import interfacceRemote.ClientComunicazioneInterfaccia;
import interfacceRemote.ServerComunicazioneInterfaccia;
import interfacciaComunicazione.Client2Server;

import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;

import client.Ambasciatore;
import miormi2.ServerAcceptInterface;

/**
 * Questa è lato CLIENT e serve per comunicare col Server
 * @author daniele
 *
 */
public class ClientComunicazione extends UnicastRemoteObject implements ClientComunicazioneInterfaccia, Client2Server {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3L;
	private static final String host = "127.0.0.1";
	private static final String url = "rmi://"+host+"/Hello";
	
	private String username = null;
	private ServerComunicazioneInterfaccia interfacciaServer; 
	
	/**
	 * Riferimento all'ambasciatore, che mi permetterà di comunicare con i metodi di client.
	 */
	private Ambasciatore ambasciatore;
	
	
	/**
	 * Se scelgo RMI Istanzio questo oggetto.
	 * Dopo averlo istanziato chiamerò eseguiLogin
	 * @throws RemoteException
	 */
	public ClientComunicazione() throws RemoteException {
		this.ambasciatore = new Ambasciatore(this);
	}
	
	
	/**
	 * Chiamato al momento di Login o Registrazione
	 * @param username
	 * @param password
	 */
	public void iniziaComunicazione(String username, String password){
		if (System.getSecurityManager() == null){
			System.setSecurityManager(new SecurityManager());
		}
		Registry registry = LocateRegistry.getRegistry(host);
		AcceptInterface stub = (AcceptInterface) registry.lookup(url); 		
		this.interfacciaServer = stub.inizioConnessione(); //torna una nuova interfaccia per comunicare col server
	}
	
	

	public void eseguiLogin(String username, String password) throws Exception{
		iniziaComunicazione(username, password);
		BeanGiocatore mioBean = this.interfacciaServer.eseguiLogin(); //eseguiamo il login e torniamo il bean
	}
		
		
		
		this.username=username; 
		this.password=password; 
		
		if (System.getSecurityManager() == null)
			System.setSecurityManager(new SecurityManager());
			Registry registry = LocateRegistry.getRegistry(host);
			AcceptInterface stub = (AcceptInterface) registry.lookup(url); 		
			//lo loggo
			this.interInServer = stub.login(this, username, password); 
	}
	

			
}
