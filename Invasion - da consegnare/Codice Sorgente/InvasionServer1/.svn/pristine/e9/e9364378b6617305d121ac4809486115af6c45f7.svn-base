package socket;

import java.net.Socket;
import java.util.ArrayList;

import server_daler.GiocatoreConnesso;
import socketTest.InterfacciaComunicazione;
import classiCondivise.BeanGiocatore;
import classiCondivise.Colori;
import classiCondivise.CreareMessaggio;
import interfacciaComunicazione.Server2Client;

//TODO Implementer√† l'interfaccia di comunicazione client2server
public class Interprete implements Server2Client, InterfacciaComunicazione {

	public static final String customString = "default";
	private String stringaLetta;
	private Lettore lettoreSocket;
	private Thread threadLettore;
	private GiocatoreConnesso giocatore;
	
	public final static String login = "LOGIN";
	public final static String logout = "LOGOUT";
	public final static String registra = "REGISTRA";
	
	public final static String classifica = "STATISTICHEGENERALI";
	public final static String statistiche = "STATISTICHEUTENTE";
	
	public final static String aggiornaTavoli = "AGGIORNATAVOLI";
	public final static String creaTavolo = "CREATAVOLO";
	public final static String joinTavolo = "UNISCITITAVOLO";
	public final static String startTavolo = "AVVIATAVOLO";
	
	public final static String abbandonaPartita = "ABBANDONAPARTITA";
	/**
	 * Avvia il lettore assandogli il socket da cui leggere
	 * @param mioSocket
	 */
	public Interprete(Socket mioSocket, GiocatoreConnesso mioGiocatore){
		super();
		this.giocatore = mioGiocatore;
		this.lettoreSocket = new Lettore(this, mioSocket);
		this.threadLettore = new Thread(lettoreSocket);
		threadLettore.start();
	}
	
	public String interpreta(String stringaLetta){
		String comando = CreareMessaggio.estraiComando(stringaLetta).toUpperCase();
		String stringaPura = CreareMessaggio.rimuoviComando(stringaLetta);
		if(comando.toUpperCase().equals(login)){
			String username = CreareMessaggio.estraiStringa(stringaPura);
			stringaLetta = CreareMessaggio.estraiSecondaParte(stringaPura);
			String password = CreareMessaggio.estraiStringa(stringaPura);
			//TODO chiamare il metodo associato
		}
		else if(comando.toUpperCase().equals(logout)){
			//TODO chiamare il logout
		} else if(comando.toUpperCase().equals(registra)){
			String username = CreareMessaggio.estraiStringa(stringaPura);
			stringaLetta = CreareMessaggio.estraiSecondaParte(stringaPura);
			String password = CreareMessaggio.estraiStringa(stringaPura);
			//TODO chiamare il metodo associato e ritornare la stringa di risposta.
		} else if(comando.toUpperCase().equals(classifica)){
			
			//TODO
		} else if(comando.toUpperCase().equals(statistiche)){
			String username = CreareMessaggio.estraiStringa(stringaPura);
			//TODO	Chiedere al giocatore connesso il bean fare il toString e ritornarlo
			
		} else if(comando.toUpperCase().equals(aggiornaTavoli)){
			//TODO	Chiedere tutti i tavoli e poi li rimandiamo indietro
		} else if(comando.toUpperCase().equals(creaTavolo)){
			
		} else if(comando.toUpperCase().equals(joinTavolo)){
			Integer numeroTavolo = CreareMessaggio.estraiInteger(stringaPura);
			//TODO	Inviare il comando di unione al tavolo scelto.
		} else if(comando.toUpperCase().equals(startTavolo)){
			Integer numeroTavolo = CreareMessaggio.estraiInteger(stringaPura);
			//TODO	Inviare il comando di unione al tavolo scelto.
		}
		//TODO Levare questo return e ritornare il valore di ogni interpreta.
		return null;
	}
	
	public synchronized String inviaComando(Integer secondiAttesa) throws InterruptedException{
		//TODO gestire l'invio del comando
		
		//Attendiamo la risposta dell'utente
		if(stringaLetta.equals(customString)){
			wait(secondiAttesa*1000);
		}
		//Ci salviamo la risposta, ripristiniamo la stringa di default e ritorniamo quello che abbiamo letto
		String risposta = stringaLetta;
		this.stringaLetta = customString;
		return risposta;
	}
	
	public String getStringaLetta() {
		return stringaLetta;
	}

	public void setStringaLetta(String stringaLetta) {
		this.stringaLetta = stringaLetta;
	}
	
	//TODO Creare pacchettatore
	
	

	@Override
	public void TavoloCreato(String nomeGiocatoreCreatore, String IdTavoloCreato) {
		// TODO Auto-generated method stub

	}

	@Override
	public void JoinTavolo(String nomeGiocatoreAggiunto, String IdTavolo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void RimossoTavoloAperto(String IdTavolo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void PassaTavoloOpenToClosed(String IdTavolo) {
		// TODO Auto-generated method stub

	}

	@Override
	public void PartiTimerTavoloAperto(String idTavolo, Integer secondi) {
		// TODO Auto-generated method stub

	}

	@Override
	public void PartiTimerTurnoPartita(String idPartita, Integer secondi) {
		// TODO Auto-generated method stub

	}

	@Override
	public void tuoTurno() {
		// TODO Auto-generated method stub

	}

	@Override
	public void cambiaTurno(String nomeGiocatore) {
		// TODO Auto-generated method stub

	}

	@Override
	public void ordinePartita(ArrayList<String> nomiGiocatori) {
		// TODO Auto-generated method stub

	}

	@Override
	public void inviaColoreGiocatorePartita(String coloreGiocatore) {
		// TODO Auto-generated method stub

	}

	@Override
	public void inviaBonusTurno(String colore, Integer bonus) {
		// TODO Auto-generated method stub

	}

	@Override
	public void inviaBonusContinente(String colore, String nomeContinente,
			Integer bonus) {
		// TODO Auto-generated method stub

	}

	@Override
	public void aggiuntaUnita(String colore, String nomeTerritorio,
			Integer numeroUnitaAggiunte) {
		// TODO Auto-generated method stub

	}

	@Override
	public void rimossaUnita(String colore, String nomeTerritorio,
			Integer numeroUnitaRimosse) {
		// TODO Auto-generated method stub

	}

	@Override
	public void assegnaArmateInizioPartita(Integer numeroArmate) {
		// TODO Auto-generated method stub

	}

	@Override
	public void assegnaArmateTurno(Integer numeroArmate) {
		// TODO Auto-generated method stub

	}

	@Override
	public ArrayList<Integer> difenditi(String nomeTerritorioAttaccante,
			ArrayList<Integer> dadiAttaccanti) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void risultatoCombattimento(Integer numeroArmatePerse,
			Integer numeroArmateDistrutte) {
		// TODO Auto-generated method stub

	}

	@Override
	public void risultatoPartita(ArrayList<Integer> punteggiFinali) {
		// TODO Auto-generated method stub

	}

	@Override
	public Colori scegliColore(ArrayList<Colori> coloriDisponibili) {
		// TODO Auto-generated method stub
		return null;
	}

}
